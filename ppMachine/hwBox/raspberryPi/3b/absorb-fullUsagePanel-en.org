####+BEGIN: bx:dblock:bnsm:top-of-menu "basic"
*  #Controls:  [[elisp:(blee:bnsm:menu-back)][Back]] [[elisp:(toggle-read-only)][read/wr]] | [[elisp:(show-all)][Show-All]]  [[elisp:(org-shifttab)][Overview]]  [[elisp:(progn (org-shifttab) (org-content))][Content]] | [[elisp:(delete-other-windows)][(1)]] | [[elisp:(progn (save-buffer) (kill-buffer))][S&Q]]  [[elisp:(save-buffer)][Save]]  [[elisp:(kill-buffer)][Quit]] 
####+END:
####+BEGIN: bx:dblock:bnsm:this-node "basic"
*  #This Node: /libre/ByStar/InitialTemplates/activeDocs/bxPlatform/physical/hwBox/raspberryPi/3b/fullUsagePanel-en.org
####+END:
####+BEGIN: bx:dblock:bnsm:menu-stack "basic"

####+END:
####+BEGIN: bx:dblock:bnsm:see-related
*  #Bash:  [[elisp:(org-cycle)][| ]] (Results: [[elisp:(blee:bnsm:results-here)][Here]] | [[elisp:(blee:bnsm:results-split-below)][Below]] | [[elisp:(blee:bnsm:results-split-right)][Right]] | [[elisp:(blee:bnsm:results-other)][Other]] | [[elisp:(blee:bnsm:results-popup)][Popup]]) (Select:  [[elisp:(lsip-local-run-command "lpCurrentsAdmin.sh -i currentsGetThenShow")][Show Currents]]  [[elisp:(lsip-local-run-command "lpCurrentsAdmin.sh")][lpCurrentsAdmin.sh]] ) [[elisp:(org-cycle)][| ]]
**  #See:  (Window: [[elisp:(blee:bnsm:results-window-show)][?]] | [[elisp:(blee:bnsm:results-window-set 0)][0]] | [[elisp:(blee:bnsm:results-window-set 1)][1]] | [[elisp:(blee:bnsm:results-window-set 2)][2]] | [[elisp:(blee:bnsm:results-window-set 3)][3]] ) || [[elisp:(bx:bnsm:top:panel-blee)][Blee]] | [[elisp:(bx:bnsm:top:panel-listOfDocs)][All Docs]]
####+END:
####+BEGIN: bx:dblock:bnsm:agenda-list
*  #Marshal:  [[elisp:(find-file "/libre/ByStar/InitialTemplates/activeDocs/listOfDocs/fullUsagePanel-en.org")][BxDE Top Panel]] ||  [[elisp:(bx:org:agenda:this-file-otherWin)][Agenda List This]]    [[elisp:(bx:org:todo:this-file-otherWin)][ToDo List This]]
####+END:
*      =====================  
*  [[elisp:(beginning-of-buffer)][Top]] #####################  [[elisp:(delete-other-windows)][(1)]]               /*  RasberryPi 3B Hardware Boxes  */
*      ================
*  [[elisp:(org-cycle)][| ]]  Related BxPanels   ::  [[elisp:(find-file "/libre/ByStar/InitialTemplates/activeDocs/bxPlatform/physical/fullUsagePanel-en.org")][Physical BxPlatform]] || [[elisp:(blee:bnsm:panel-goto "/libre/ByStar/InitialTemplates/activeDocs/bxPlatform/physical/hwBox")][Hardware Boxes]]  ||  [[elisp:(lsip-local-run-command "hwBoxAsusT100.sh")][hwBoxAsusT100.sh]]   [[elisp:(org-cycle)][| ]]
*  [[elisp:(org-cycle)][| ]]  Model and Info     ::  Panel's Position In Bx Reference Model And Related External Info [[elisp:(org-cycle)][| ]]
**  [[elisp:(org-cycle)][| ]]  Info              ::  https://www.raspberrypi.org/
*  [[elisp:(org-cycle)][| ]]  Panel Usage Notes  ::  Extensions, New Modules & ReNew Process And Procedures  [[elisp:(org-cycle)][| ]]
*      ================
*  [[elisp:(org-cycle)][| ]]  Panel IIMs         ::           *Panel IIMs Invoke and Visit Xrefs*      <<Xref->>  [[elisp:(org-cycle)][| ]]
**  [[elisp:(beginning-of-buffer)][Top]] ############ [[elisp:(delete-other-windows)][(1)]]   Lca BinsPreps Invokes and Xrefs:
**      IIM               ::   [[elisp:(lsip-local-run-command "lcaSambaBinsPrep.sh")][lcaSambaBinsPrep.sh]]             [[file:/opt/public/osmt/bin/lcaSambaBinsPrep.sh::Xref-][Visit]]
**      IIM               ::   [[elisp:(lsip-local-run-command "lcaSambaSysdAdmin.sh")][lcaSambaSysdAdmin.sh]]            [[file:/opt/public/osmt/bin/lcaSambaSysdAdmin.sh::Xref-][Visit]]
*      ================
*  [[elisp:(beginning-of-buffer)][Top]] #####################  [[elisp:(delete-other-windows)][(1)]]      *BxPanel Defaults And Control/Info*
*      Panel Defaults     ::  [[elisp:(bx:iimBash:cmndLineSpecs :name "lcaSambaSysdAdmin.sh")][Select IIM-Bash Defaults]] || [[elisp:(bx:iimp:cmndLineSpecs :name "bxpManage.py")][Select IIM-Py Defaults]] || [[elisp:(describe-variable 'bx:curUnit)][Show Selected Local Vars]] || [[elisp:(lsip-local-run-command-here "lsf")][lsf]] || [[elisp:(lsip-local-run-command-here "pwd")][pwd]] ||
*      Select Cur Unit    ::  [[elisp:(bx:valueReader:symbol 'bx:curUnit)][Any]] || [[elisp:(setq bx:curUnit "ssh.service")][ssh.service]] || [[elisp:(setq bx:curUnit "rc-local.service")][rc-local.service]] || [[elisp:(setq bx:curUnit "bxBootstrapFirstBoot.service")][bxBootstrapFirstBoot.service]] 
####+END:
*  [[elisp:(org-cycle)][| ]]  =pnlDblock-Begins= ::  [[elisp:(org-cycle)][| ]]
####+BEGIN: bx:dblock:global:file-insert :file "/libre/ByStar/InitialTemplates/activeDocs/common/iimPanels/cmndLine/allBx.org"
*  [[elisp:(org-cycle)][| ]]  [IIMs Exec Cntrl]  ::           *Common Execution Control: ByStar IIMs*  [[elisp:(org-cycle)][| ]]
**  [[elisp:(org-cycle)][| ]]  BxP Effectives     ::   [[file:/libre/ByStar/InitialTemplates/activeDocs/bxPlatform/params/fullUsagePanel-en.org][Currents/Effective Panel]]  ||  [[elisp:(lsip-local-run-command "lpCurrentsAdmin.sh -i currentsGetThenShow")][Show Currents]] || [[elisp:(lsip-local-run-command "lpCurrentsAdmin.sh")][lpCurrentsAdmin.sh]]   [[elisp:(org-cycle)][| ]]
*** lpCurrents Prep        [[elisp:(lsip-local-run-command "lpCurrentsAdmin.sh -h -v -n showRun -i fullUpdate")][lpCurrentsAdmin.sh -i fullUpdate]]
*** Set Current Bxo        [[elisp:(lsip-local-run-command "echo lpCurrentsAdmin.sh -h -v -n showRun -i setParam currentBystarUid ea-59043")][echo lpCurrentsAdmin.sh -i setParam currentBystarUid ea-59043]]
**  [[elisp:(org-cycle)][| ]]  Py IIM Cmnd Ctl    ::   [[elisp:(bx:iimp:resultsShow:cmndLineElems)][Show Cmnd Line Elems]] |  [[elisp:(bx:iimp:cmndLineSpecs :verbosity "-v 1" :callTracking "--callTrackings monitor+ --callTrackings invoke+")][Full Verbosity]] | [[elisp:(bx:iimp:cmndLineSpecs :verbosity "-v 30" :callTracking "")][No Verbosity]] [[elisp:(org-cycle)][| ]]
*** iimWrapper:         [[elisp:(setq bx:iimp:iimWrapper "")][""]] | [[elisp:(bx:valueReader:symbol 'bx:iimp:iimWrapper)][Any]] | [[elisp:(setq bx:iimp:iimWrapper "echo")][echo]] | [[elisp:(setq bx:iimp:iimWrapper "time")][time]] | [[elisp:(setq bx:iimp:iimWrapper "python -m cProfile -o profile.$$$(date +%s%N)")][profile]] | [[elisp:(setq bx:iimp:iimWrapper "pycallgraph  --max-depth 5 graphviz -- ")][pycallgraph]]
*** iimName:            [[elisp:(setq bx:iimp:iimVerbosity "")][""]] | [[elisp:(bx:valueReader:symbol 'bx:iimp:iimName)][Any]] | iimName
*** iimVerbosity:       [[elisp:(setq bx:iimp:iimVerbosity "")][""]] | [[elisp:(bx:valueReader:symbol 'bx:iimp:iimVerbosity)][Any]] | [[elisp:(setq bx:iimp:iimVerbosity "-v 30")][v=30]] | [[elisp:(setq bx:iimp:iimVerbosity "-v 20")][v=20]] | [[elisp:(setq bx:iimp:iimVerbosity "-v 1")][v=1]]
*** iimCallTracking:    [[elisp:(setq bx:iimp:iimCallTracking "")][""]] | [[elisp:(bx:valueReader:symbol 'bx:iimp:iimCallTracking)][Any]] | [[elisp:(setq bx:iimp:iimCallTracking "--callTrackings monitor+ --callTrackings invoke+")][--callTrackings monitor+ --callTrackings invoke+]]
*** iimLoads:           [[elisp:(setq bx:iimp:iimWrapper "")][""]] | [[elisp:(bx:valueReader:symbol 'bx:iimp:iimLoads)][Any]]
*** iimModeArgs:        [[elisp:(setq bx:iimp:iimModeArgs "")][""]] | [[elisp:(bx:valueReader:symbol 'bx:iimp:iimModeArgs)][Any]] | [[elisp:(setq bx:iimp:iimModeArgs "--sonModule")][--sonModule]]
*** iimParamsArgs:      [[elisp:(setq bx:iimp:iimWrapper "")][""]] | [[elisp:(bx:valueReader:symbol 'bx:iimp:iimParamsArgs)][Any]]
*** iimIif:             [[elisp:(setq bx:iimp:iimWrapper "")][""]] | [[elisp:(bx:valueReader:symbol 'bx:iimp:iimIif)][Any]] | [[elisp:(setq bx:iimp:iimIif "examples")][examples]] | [[elisp:(setq bx:iimp:iimIif "describe")][describe]]
*** iimIifArgs:         [[elisp:(setq bx:iimp:iimIifArgs "")][""]] | [[elisp:(bx:valueReader:symbol 'bx:iimp:iimIifArgs)][Any]]
*** Execute Command Line:   [[elisp:(bx:iimp:cmndLineExec)][Run Cmnd Line]] | [[elisp:(bx:iimp:cmndLineExec :wrapper "echo")][Echo Cmnd Line]]
**  [[elisp:(org-cycle)][| ]]  Py Tools           ::  Work Bench | Profiling | Debuggers | Sphinx [[elisp:(org-cycle)][| ]]
***  [[elisp:(org-cycle)][| ]]  Py Dev WorkBench ::  Lint, Check And Class Browse The IIM Module  [[elisp:(org-cycle)][| ]]
****  [[elisp:(org-cycle)][| ]]  Class Browsers     ::   [[elisp:(python-check (format "pyclbr %s" bx:iimp:iimName))][pyclbr]]  [[elisp:(org-cycle)][| ]]
****  [[elisp:(org-cycle)][| ]]  Static Checkers    ::   [[elisp:(python-check (format "pyflakes %s" bx:iimp:iimName))][pyflakes]] | [[elisp:(python-check (format "pep8 %s" bx:iimp:iimName)))][pep8]] | [[elisp:(python-check (format "flake8 %s" bx:iimp:iimName)))][flake8]] | [[elisp:(python-check (format "pylint %s" bx:iimp:iimName)))][pylint]] [[elisp:(org-cycle)][| ]]
****  [[elisp:(org-cycle)][| ]]  Execution Checkers ::   [[elisp:(python-check (format "pychecker %s" bx:iimp:iimName)))][pychecker (executes)]]  [[elisp:(org-cycle)][| ]]
****  [[elisp:(org-cycle)][| ]]  CallGraphs         ::   [[elisp:(bx:iimp:cmndLineExec :wrapper "pycallgraph  --max-depth 5 graphviz -- ")][Create ./pycallgraph.png]]  ||  [[elisp:(lsip-local-run-command-here "eog pycallgraph.png")][Visit pycallgraph.png]]  [[elisp:(org-cycle)][| ]]
****  [[elisp:(org-cycle)][| ]]  Sphinx DocStr      ::   [[elisp:(lsip-local-run-command-here "iimsProc.sh -h -v -n showRun -i sphinxDocUpdate")][iimsProc.sh -i sphinxDocUpdate]] || [[elisp:(lsip-local-run-command-here "iimsProc.sh -h -v -n showRun -f -i sphinxDocUpdate")][iimsProc.sh -f -i sphinxDocUpdate]]  [[elisp:(org-cycle)][| ]]
***  [[elisp:(org-cycle)][| ]]  Py Profiling     ::  Execute And Profile the IIM -- Analyze  Profile Results   [[elisp:(org-cycle)][| ]]
****  [[elisp:(org-cycle)][| ]]  Exec & Profile   ::  [[elisp:(bx:iimp:cmndLineExec :wrapper "python -m cProfile -o profile.$$$(date +%s%N)")][Profile Command Line]] [[elisp:(org-cycle)][| ]]
****  [[elisp:(org-cycle)][| ]]  Profile Analysis ::  [[elisp:(lsip-local-run-command-here "ls -l profile.*")][ls -l profile.*]]  [[elisp:(lsip-local-run-command-here "ls -t profile.* | head -1")][latest profile.*]] [[elisp:(org-cycle)][| ]]
****  [[elisp:(org-cycle)][| ]]  Profile CallTree ::  [[elisp:(lsip-local-run-command-here "gprof2dot -f pstats $(ls -t profile.* | head -1) | dot -Tsvg -o Profile.svg")][Create Profile.svg]] || [[elisp:(lsip-local-run-command-here "eog Profile.svg")][Visit Profile.svg]] [[elisp:(org-cycle)][| ]]
****  [[elisp:(org-cycle)][| ]]  python -m pstats ::  [[elisp:(lsip-local-run-command-here "python -m pstats $(ls -t profile.*)")][pstats interactive]]  --  "help"  "sort cumulative"+"stats 5" [[elisp:(org-cycle)][| ]]
****  [[elisp:(org-cycle)][| ]]  Other Prof Tools ::  [[elisp:(lsip-local-run-command-here "cprofilev -f $(ls -t profile.*)")][cprofilev]]  [[elisp:(lsip-local-run-command-here "runsnake $(ls -t profile.*)")][runsnake profile.pid]] [[elisp:(org-cycle)][| ]]
***  [[elisp:(org-cycle)][| ]]  Py Debuggers     ::  Realgud:pdb, realgud:trepan -- Based On CmndLineElems   [[elisp:(org-cycle)][| ]]
****  [[elisp:(org-cycle)][| ]]  realgud:pdb      ::  [[elisp:(bx:iimp:realgud:pdb:noArgs)][Realgud Pdb NoArgs]] ||  [[elisp:(bx:iimp:realgud:pdb:allArgs)][Realgud Pdb All Args]] [[elisp:(org-cycle)][| ]]
***  [[elisp:(org-cycle)][| ]]  Py Sphinx Doc    ::  Generate Documentation With Sphinx   [[elisp:(org-cycle)][| ]]
****  [[elisp:(org-cycle)][| ]]  Doc Update       ::  [[elisp:(lsip-local-run-command-here "iimsProc.sh -h -v -n showRun -i sphinxDocUpdate")][iimsProc.sh -i sphinxDocUpdate]] || [[elisp:(lsip-local-run-command-here "iimsProc.sh -h -v -n showRun -f -i sphinxDocUpdate")][iimsProc.sh -f -i sphinxDocUpdate]]  [[elisp:(org-cycle)][| ]]
**  [[elisp:(org-cycle)][| ]]  Bash IIM Cmnd Ctl  ::   [[elisp:(bx:iimBash:resultsShow:cmndLineElems)][Show Cmnd Line Elems]] |  [[elisp:(bx:iimBash:cmndLineSpecs :verbosity "-v" :callTracking "-n showRun")][Full Verbosity]] | [[elisp:(bx:iimBash:cmndLineSpecs :verbosity "" :callTracking "")][No Verbosity]] [[elisp:(org-cycle)][| ]]
*** iimWrapper:         [[elisp:(setq bx:iimBash:iimWrapper "")][""]] | [[elisp:(bx:valueReader:symbol 'bx:iimBash:iimWrapper)][Any]] | [[elisp:(setq bx:iimBash:iimWrapper "echo")][echo]] | [[elisp:(setq bx:iimBash:iimWrapper "time")][time]] 
*** iimName:            [[elisp:(setq bx:iimBash:iimName "")][""]] | [[elisp:(bx:valueReader:symbol 'bx:iimBash:iimName)][Any]] | iimName
*** iimVerbosity:       [[elisp:(setq bx:iimBash:iimVerbosity "")][""]] | [[elisp:(bx:valueReader:symbol 'bx:iimBash:iimVerbosity)][Any]] | [[elisp:(setq bx:iimBash:iimVerbosity "-v")][-v]]
*** iimCallTracking:    [[elisp:(setq bx:iimBash:iimCallTracking "")][""]] | [[elisp:(bx:valueReader:symbol 'bx:iimBash:iimCallTracking)][Any]] | [[elisp:(setq bx:iimBash:iimCallTracking "-n showRun")][-n showRun]]
*** iimParamsArgs:      [[elisp:(setq bx:iimBash:iimParamsArgs "")][""]] | [[elisp:(bx:valueReader:symbol 'bx:iimBash:iimParamsArgs)][Any]] | -p parName=parValue
*** iimIif:             [[elisp:(setq bx:iimBash:iimIif "")][""]] | [[elisp:(bx:valueReader:symbol 'bx:iimBash:iimIif)][Any]] | [[elisp:(setq bx:iimBash:iimIif "examples")][examples]] | [[elisp:(setq bx:iimBash:iimIif "describe")][describe]]
*** iimIifArgs:         [[elisp:(setq bx:iimBash:iimIifArgs "")][""]] | [[elisp:(bx:valueReader:symbol 'bx:iimBash:iimIifArgs)][Any]]
*** Execute Command Line:   [[elisp:(bx:iimBash:cmndLineExec)][Run Cmnd Line]] | [[elisp:(bx:iimBash:cmndLineExec :wrapper "echo")][Echo Cmnd Line]]
**  [[elisp:(org-cycle)][| ]]  BxO IIM Args Ctl   ::   [[elisp:(bx:iimBash:resultsShow:cmndLineElems)][Show Cmnd Line Elems]] |  [[elisp:(bx:iimBash:cmndLineSpecs :verbosity "-v" :callTracking "-n showRun")][Full Verbosity]] | [[elisp:(bx:iimBash:cmndLineSpecs :verbosity "" :callTracking "")][No Verbosity]] [[elisp:(org-cycle)][| ]]
*** bxo:                [[elisp:(setq bx:iimBash:iimWrapper "")][""]] | [[elisp:(bx:valueReader:symbol 'bx:iimBash:iimWrapper)][Any]] | [[elisp:(setq bx:iimBash:iimWrapper "echo")][echo]] | [[elisp:(setq bx:iimBash:iimWrapper "time")][time]] 
*** bxso:               [[elisp:(setq bx:iimBash:iimName "")][""]] | [[elisp:(bx:valueReader:symbol 'bx:iimBash:iimName)][Any]] | iimName
*** bxio:               [[elisp:(setq bx:iimBash:iimVerbosity "")][""]] | [[elisp:(bx:valueReader:symbol 'bx:iimBash:iimVerbosity)][Any]] | [[elisp:(setq bx:iimBash:iimVerbosity "-v")][-v]]
*** srBase:             [[elisp:(setq bx:iimBash:iimCallTracking "")][""]] | [[elisp:(bx:valueReader:symbol 'bx:iimBash:iimCallTracking)][Any]] | [[elisp:(setq bx:iimBash:iimCallTracking "-n showRun")][-n showRun]]
*** Execute Command Line:   [[elisp:(bx:iimBash:cmndLineExec)][Run Cmnd Line]] | [[elisp:(bx:iimBash:cmndLineExec :wrapper "echo")][Echo Cmnd Line]]
**  [[elisp:(org-cycle)][| ]]  BxP Cmnd Line Ctl  ::   [[elisp:(bx:bxpCmnd:resultsShow:cmndLineElems)][Show Cmnd Line Elems]] |   [[elisp:(org-cycle)][| ]]
*** cmndWrapper:        [[elisp:(setq bx:iimBash:aFqdn "")][""]] | [[elisp:(bx:valueReader:symbol 'bx:bxpCmnd:aFqdn)][Any]] | NOTYET
*** cmndName:           [[elisp:(setq bx:iimBash:aFqdn "")][""]] | [[elisp:(bx:valueReader:symbol 'bx:bxpCmnd:aFqdn)][Any]] | NOTYET
*** aFqdn:              [[elisp:(setq bx:iimBash:aFqdn "")][""]] | [[elisp:(bx:valueReader:symbol 'bx:bxpCmnd:aFqdn)][Any]] | [[elisp:(setq bx:bxpCmnd:aFqdn "www.example.com")][www.example.com]] | [[elisp:(setq bx:iimBash:aFqdn "www.by-star.net")][www.by-star.net]]
*** aIpAddr:            [[elisp:(setq bx:iimBash:aIpAddr "")][""]] | [[elisp:(bx:valueReader:symbol 'bx:bxpCmnd:aIpAddr)][Any]] | [[elisp:(setq bx:bxpCmnd:aIpAddr "8.8.8.8")][8.8.8.8]]
*** Execute Command Line:   [[elisp:(bx:iimBash:cmndLineExec)][Run Cmnd Line]] | [[elisp:(bx:iimBash:cmndLineExec :wrapper "echo")][Echo Cmnd Line]]

####+END:
*  [[elisp:(beginning-of-buffer)][Top]] =pnlDblock-Ends=   ::  [[elisp:(delete-other-windows)][(1)]] 
*  [[elisp:(beginning-of-buffer)][Top]] #####################  [[elisp:(delete-other-windows)][(1)]]      *Hardware Components*  
*  [[elisp:(org-cycle)][| ]]  Mother Board       ::  RaspberryPi 3 Model B ($35.00) ||   [[elisp:(org-cycle)][| ]]
*  [[elisp:(org-cycle)][| ]]  Micro SD Card      ::  Samsun EVO 32Gig ($17.00) ||   [[elisp:(org-cycle)][| ]]
*  [[elisp:(org-cycle)][| ]]  Power Supply       ::  RPi3b Needa 5V@2.5A ||   [[elisp:(org-cycle)][| ]]
*  [[elisp:(org-cycle)][| ]]  Display Cards      ::  7inch ($64) ||   [[elisp:(org-cycle)][| ]]
*  [[elisp:(org-cycle)][| ]]  Cases              ::  Display Card Case ||   [[elisp:(org-cycle)][| ]]
*      ================
*  [[elisp:(beginning-of-buffer)][Top]] #####################  [[elisp:(delete-other-windows)][(1)]]      *Creating RaspberryPI Boot Image*  
*      Images Respoitory  :: /uniform/Public/gplh/unpub/distro/raspbian/201612
* TODO Srvr GUI Config    ::  [[elisp:(lsip-local-run-command-here "gksu system-config-samba &")][gksu system-config-samba &]]  -- notyet sudo touch /etc/libuser.conf
*     Srvr Status/Info    ::  [[elisp:(lsip-local-run-command-here "sudo smbstatus")][sudo smbstatus]] ||  [[elisp:(lsip-local-run-command-here "testparm")][testparm]]
*  [[elisp:(org-cycle)][| ]] Srvr Config File    ::  [[elisp:(find-file "/root@localhost:/etc/samba/smb.conf")]]  (C-X q) --  [[elisp:(org-cycle)][| ]] 
*     Repos Prep          ::  [[elisp:(bx:iimBash:cmndLineExec :wrapper "" :name "lcaSambaSysdAdmin.sh" :iif "reposPrep" :iifArgs "/uniform/ClusterConfidential")][lcaSambaSysdAdmin.sh -i reposPrep /uniform/ClusterConfidential]]

*      ================
*  [[elisp:(beginning-of-buffer)][Top]] #####################  [[elisp:(delete-other-windows)][(1)]]      *Invokations: Specific IIFs of IIMs*  
*  [[elisp:(org-cycle)][| ]]  Selected Targets   ::  [[elisp:(bx:iimp:cmndLineExec :wrapper "" :name "bxpManage.py" :modeArgs "--sonModule" :loads "--load ./liProxy.py  --load ./liTargets.py" :iif "auxIif")][@selectedIim@ --load ./liProxy.py ./liTargets.py -i auxIif]]
*      ================
*  [[elisp:(beginning-of-buffer)][Top]] #####################  [[elisp:(delete-other-windows)][(1)]]      *Notes -- Status -- Development -- Evolution*
*  [[elisp:(org-cycle)][| ]]  Manifest           ::   /Files Description/    [[elisp:(lsip-local-run-command-here "ls -C -F -1 | emlStdinGen -i lsToManifestStdout")][ls -C -F -1 | emlStdinGen -i lsToManifestStdout]] [[elisp:(org-cycle)][| ]]
*  [[elisp:(org-cycle)][| ]]  Notes              ::   /Notes, Ideas, Tasks, Agenda/   [[elisp:(org-cycle)][| ]]
**  [[elisp:(org-cycle)][| ]]  Context      ::  Module Starting Points  [[elisp:(org-cycle)][| ]]
*  [[elisp:(org-cycle)][| ]]  Team               ::   /Development Team/ [[elisp:(org-cycle)][| ]]
*      =====================  
*  [[elisp:(beginning-of-buffer)][Top]] #####################  [[elisp:(delete-other-windows)][(1)]]      *Common Footer Controls*
####+BEGIN: bx:dblock:org:parameters :types "agenda"
#+STARTUP: lognotestate
#+SEQ_TODO: TODO WAITING DELEGATED | DONE DEFERRED CANCELLED
#+TAGS: @desk(d) @home(h) @work(w) @withInternet(i) @road(r) call(c) errand(e)
####+END:


####+BEGIN: bx:dblock:bnsm:end-of-menu "basic"
*  #Controls:  [[elisp:(blee:bnsm:menu-back)][Back]]  [[elisp:(toggle-read-only)][toggle-read-only]]  [[elisp:(show-all)][Show-All]]  [[elisp:(org-shifttab)][Cycle Glob Vis]]  [[elisp:(delete-other-windows)][1 Win]]  [[elisp:(save-buffer)][Save]]   [[elisp:(kill-buffer)][Quit]]
####+END:
*  [[elisp:(org-cycle)][| ]]  Local Vars  ::                  *Org-Mode And Emacs Specific Configurations*   [[elisp:(org-cycle)][| ]]
#+CATEGORY: bxPanel
#+STARTUP: overview

;; Local Variables:
;; eval: (setq bx:iimp:iimModeArgs "")
;; eval: (bx:iimp:cmndLineSpecs :name "bxpManage.py")
;; eval: (bx:iimBash:cmndLineSpecs :name "lcaSambaSysdAdmin.sh")
;; eval: (setq bx:curUnit "smbd")
;; End:
