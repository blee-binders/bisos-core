* B|
####+BEGIN: bxPanel:common/title-plus
#+title: baseDirs/uniformBaseDirs
#+roam_tags: leaf
#+roam_key: bisos-core/baseDirs/uniformBaseDirs
[[file:../_nodeBase_/fullUsagePanel-en.org][bisos-core/baseDirs]]
####+END
####+BEGIN: blee:bxPanel:topPanelControls
*  [[elisp:(org-cycle)][|#Control|]] :: [[elisp:(blee:bnsm:menu-back)][Back]] [[elisp:(toggle-read-only)][read/wr]] | [[elisp:(show-all)][Show-All]]  [[elisp:(org-shifttab)][Overview]]  [[elisp:(progn (org-shifttab) (org-content))][Content]] | [[elisp:(delete-other-windows)][(1)]] | [[elisp:(progn (save-buffer) (kill-buffer))][S&Q]] [[elisp:(save-buffer)][Save]] [[elisp:(kill-buffer)][Quit]] [[elisp:(bury-buffer)][Bury]]  [[elisp:(magit)][Magit]]  [[elisp:(org-cycle)][| ]]
**  [[elisp:(blee:buf:re-major-mode)][Re-Major-Mode]] ||  [[elisp:(org-dblock-update-buffer-bx)][Update Buf Dblocks]] || [[elisp:(org-dblock-bx-blank-buffer)][Blank Buf Dblocks]] || [[elisp:(bx:panel:variablesShow)][bx:panel:variablesShow]]
**  [[elisp:(blee:menu-sel:comeega:maintenance:popupMenu)][||Maintenance]] 
**  This File :: *= /bisos/panels/bisos-core/baseDirs/uniformBaseDirs/fullUsagePanel-en.org =* 
*  [[elisp:(org-cycle)][|#Select|]]  :: (Results: [[elisp:(blee:bnsm:results-here)][Here]] | [[elisp:(blee:bnsm:results-split-below)][Below]] | [[elisp:(blee:bnsm:results-split-right)][Right]] | [[elisp:(blee:bnsm:results-other)][Other]] | [[elisp:(blee:bnsm:results-popup)][Popup]]) (Select:  [[elisp:(lsip-local-run-command "lpCurrentsAdmin.sh -i currentsGetThenShow")][Show Currents]]  [[elisp:(lsip-local-run-command "lpCurrentsAdmin.sh")][lpCurrentsAdmin.sh]] ) [[elisp:(org-cycle)][| ]]
**  #See:  (Window: [[elisp:(blee:bnsm:results-window-show)][?]] | [[elisp:(blee:bnsm:results-window-set 0)][0]] | [[elisp:(blee:bnsm:results-window-set 1)][1]] | [[elisp:(blee:bnsm:results-window-set 2)][2]] | [[elisp:(blee:bnsm:results-window-set 3)][3]] ) || [[elisp:(lsip-local-run-command-here "echo pushd dest")][echo pushd dir]] || [[elisp:(lsip-local-run-command-here "lsf")][lsf]] || [[elisp:(lsip-local-run-command-here "pwd")][pwd]] |
**  [[elisp:(org-cycle)][|#Destinations|]] :: [[Evolution]] | [[Maintainers]]  [[elisp:(org-cycle)][| ]]
**  #See:  [[elisp:(bx:bnsm:top:panel-blee)][Blee]] | [[elisp:(bx:bnsm:top:panel-listOfDocs)][All Docs]]  E|
####+END
####+BEGIN: blee:bxPanel:title :panelType "=bxPanel=" :title "auto"
* [[elisp:(show-all)][(>]] ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 
*   [[img-link:file:/bisos/blee/env/images/fpfByStarElipseTop-50.png][http://www.freeprotocols.org]]_ _   ~Leaf:: bisos-core/baseDirs -- uniformBaseDirs~   [[img-link:file:/bisos/blee/env/images/fpfByStarElipseBottom-50.png][http://www.by-star.net]]
* ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━  [[elisp:(org-shifttab)][<)]] E|
####+END:
####+BEGIN: blee:bxPanel:terseTreeNavigator :panelsList "bxPanel"
* [[elisp:(show-all)][(>]] [[elisp:(describe-function 'org-dblock-write:blee:bxPanel:terseTreeNavigator)][dbf]]
* [[elisp:(show-all)][|n]]  _[[elisp:(blee:menu-sel:outline:popupMenu)][±]]_  _[[elisp:(blee:menu-sel:navigation:popupMenu)][Ξ]]_   General Panels ::   [[img-link:file:/bisos/blee/env/images/bystarInside.jpg][http://www.by-star.net]] *|*  [[elisp:(find-file "/libre/ByStar/InitialTemplates/activeDocs/listOfDocs/fullUsagePanel-en.org")][BxDE Top Panel]] *|* [[elisp:(blee:bnsm:panel-goto "/libre/ByStar/InitialTemplates/activeDocs/planning/Main")][ByStar Planning]]

*   *Siblings*   :: [[elisp:(blee:bnsm:panel-goto "/bisos/panels/bisos-core/baseDirs/BxIso")][BxIso]] *|* [[elisp:(blee:bnsm:panel-goto "/bisos/panels/bisos-core/baseDirs/BxU")][BxU]] *|* [[elisp:(blee:bnsm:panel-goto "/bisos/panels/bisos-core/baseDirs/bisosBaseDirs")][bisosBaseDirs]] *|* [[elisp:(blee:bnsm:panel-goto "/bisos/panels/bisos-core/baseDirs/districtBaseDirs")][districtBaseDirs]] *|* [[elisp:(blee:bnsm:panel-goto "/bisos/panels/bisos-core/baseDirs/siteBaseDirs")][siteBaseDirs]] *|* 
*   *Siblings*   :: [[elisp:(blee:bnsm:panel-goto "/bisos/panels/bisos-core/baseDirs/uniformBaseDirs")][uniformBaseDirs]] *|* 
*   /Ancestors/  :: [[elisp:(blee:bnsm:panel-goto "/bisos/panels/bisos-core/baseDirs/_nodeBase_")][ =baseDirs= ]] *|* [[elisp:(blee:bnsm:panel-goto "/bisos/panels/bisos-core/_nodeBase_")][ =bisos-core= ]] *|* 
*                                   _━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━_                          [[elisp:(org-shifttab)][<)]] E|
####+END
####+BEGIN: blee:bxPanel:foldingSection :outLevel 1 :title "Overview" :anchor "Panel"
* [[elisp:(show-all)][(>]]  _[[elisp:(blee:menu-sel:outline:popupMenu)][±]]_  _[[elisp:(blee:menu-sel:navigation:popupMenu)][Ξ]]_       [[elisp:(org-cycle)][| *Overview:* |]] <<Panel>>   [[elisp:(org-shifttab)][<)]] E|
####+END
** 
** Overview Comes Here.
** B|
####+BEGIN: blee:bxPanel:separator :outLevel 1
* /[[elisp:(beginning-of-buffer)][|^]] [[elisp:(blee:menu-sel:navigation:popupMenu)][==]] [[elisp:(delete-other-windows)][|1]]/
####+END
*  [[elisp:(org-cycle)][| ]]  IIMs            ::     /IIMs and Xrefs:/      <<Xref->>  [[elisp:(org-cycle)][| ]]
**      ############
**      ============    /BxPlatform/
**      commonPlatformBaseDirs.libSh            [[file:/opt/public/osmt/bin/commonPlatformBaseDirs.libSh::Xref-Here-][Visit]]   -- /dd [0-17] As use:archive:backup
**      [[elisp:(lsip-local-run-command "seedPlatformBaseDirs.sh")][seedPlatformBaseDirs.sh]]                   [[file:/opt/public/osmt/bin/seedPlatformBaseDirs.sh::Xref-Here-][Visit]]   --
**      [[elisp:(lsip-local-run-command "bystarPlatformBaseDirs.sh")][bystarPlatformBaseDirs.sh]]                 [[file:/opt/public/osmt/bin/bystarPlatformBaseDirs.sh::Xref-Here-][Visit]]   --  _dd _de _hss _uniform
**      hssDistsBaseDirs.sh                             --
**      ============    /BxO/
**      seedBisoBaseDirs.sh
**      bisoBaseDirs.sh
**      ============    /BxU/
**      bxuBaseDirs.sh
**      ============    /Privacy Scopes/
**      districtBaseDirs.sh                             -- tiimi
**      sitePlatformBaseDirs.sh
**     ============    *To Be Absorbed Examples*
**     [All]         ::   [[elisp:(lsip-local-run-command%20"lcaPyCelerySvcUse.sh")][lcaPyCelerySvcUse.sh]]               [[file:/opt/public/osmt/bin/lcaPyCelerySvcUse.sh::Xref-Here-][Visit]] -- Applicability Of Service-Software to Platform
*      ================
*      Cmnd Defaults ::  [[elisp:(bx:iimp:cmndLineSpecs :name "comInactivityMonitor.py")][IIMP: Cmnd Line Defaults]] || [[localVars]]
*  [[elisp:(org-cycle)][| ]]  /Iim-Dblock-Begins/  ::         *Selections And IIM Controls*  [[elisp:(org-cycle)][| ]]
####+BEGIN: bx:dblock:global:file-insert :file "/libre/ByStar/InitialTemplates/activeDocs/common/iimp/cmndLine/bashBxAll.org"
*  [[elisp:(beginning-of-buffer)][Top]] ################ [[elisp:(delete-other-windows)][(1)]]  /Inside-Dblock-Begins [RO]/     *Selections and ByStar IIM: Common Execution Control*
*  [[elisp:(org-cycle)][| ]]  BxP Effectives     ::   [[file:/libre/ByStar/InitialTemplates/activeDocs/bxPlatform/params/fullUsagePanel-en.org][Currents/Effective Panel]]  ||  [[elisp:(lsip-local-run-command "lpCurrentsAdmin.sh -i currentsGetThenShow")][Show Currents]] || [[elisp:(lsip-local-run-command "lpCurrentsAdmin.sh")][lpCurrentsAdmin.sh]]   [[elisp:(org-cycle)][| ]]
** lpCurrents Prep        [[elisp:(lsip-local-run-command "lpCurrentsAdmin.sh -h -v -n showRun -i fullUpdate")][lpCurrentsAdmin.sh -i fullUpdate]]
** Set Current Bxo        [[elisp:(lsip-local-run-command "echo lpCurrentsAdmin.sh -h -v -n showRun -i setParam currentBystarUid ea-59043")][echo lpCurrentsAdmin.sh -i setParam currentBystarUid ea-59043]]
*  [[elisp:(org-cycle)][| ]]  Py IIM Cmnd Ctl    ::   [[elisp:(bx:iimp:resultsShow:cmndLineElems)][Show Cmnd Line Elems]] |  [[elisp:(bx:iimp:cmndLineSpecs :verbosity "-v 1" :callTracking "--callTrackings monitor+ --callTrackings invoke+")][Full Verbosity]] | [[elisp:(bx:iimp:cmndLineSpecs :verbosity "-v 30" :callTracking "")][No Verbosity]] [[elisp:(org-cycle)][| ]]
** iimWrapper:         [[elisp:(setq bx:iimp:iimWrapper "")][""]] | [[elisp:(bx:valueReader:symbol 'bx:iimp:iimWrapper)][Any]] | [[elisp:(setq bx:iimp:iimWrapper "echo")][echo]] | [[elisp:(setq bx:iimp:iimWrapper "time")][time]] | [[elisp:(setq bx:iimp:iimWrapper "python -m cProfile -o profile.$$$(date +%s%N)")][profile]] | [[elisp:(setq bx:iimp:iimWrapper "pycallgraph  --max-depth 5 graphviz -- ")][pycallgraph]]
** iimName:            [[elisp:(setq bx:iimp:iimVerbosity "")][""]] | [[elisp:(bx:valueReader:symbol 'bx:iimp:iimName)][Any]] | iimName
** iimVerbosity:       [[elisp:(setq bx:iimp:iimVerbosity "")][""]] | [[elisp:(bx:valueReader:symbol 'bx:iimp:iimVerbosity)][Any]] | [[elisp:(setq bx:iimp:iimVerbosity "-v 30")][v=30]] | [[elisp:(setq bx:iimp:iimVerbosity "-v 20")][v=20]] | [[elisp:(setq bx:iimp:iimVerbosity "-v 1")][v=1]]
** iimCallTracking:    [[elisp:(setq bx:iimp:iimCallTracking "")][""]] | [[elisp:(bx:valueReader:symbol 'bx:iimp:iimCallTracking)][Any]] | [[elisp:(setq bx:iimp:iimCallTracking "--callTrackings monitor+ --callTrackings invoke+")][--callTrackings monitor+ --callTrackings invoke+]]
** iimLoads:           [[elisp:(setq bx:iimp:iimWrapper "")][""]] | [[elisp:(bx:valueReader:symbol 'bx:iimp:iimLoads)][Any]]
** iimModeArgs:        [[elisp:(setq bx:iimp:iimModeArgs "")][""]] | [[elisp:(bx:valueReader:symbol 'bx:iimp:iimModeArgs)][Any]] | [[elisp:(setq bx:iimp:iimModeArgs "--sonModule")][--sonModule]]
** iimParamsArgs:      [[elisp:(setq bx:iimp:iimWrapper "")][""]] | [[elisp:(bx:valueReader:symbol 'bx:iimp:iimParamsArgs)][Any]]
** iimIif:             [[elisp:(setq bx:iimp:iimWrapper "")][""]] | [[elisp:(bx:valueReader:symbol 'bx:iimp:iimIif)][Any]] | [[elisp:(setq bx:iimp:iimIif "examples")][examples]] | [[elisp:(setq bx:iimp:iimIif "describe")][describe]]
** iimIifArgs:         [[elisp:(setq bx:iimp:iimIifArgs "")][""]] | [[elisp:(bx:valueReader:symbol 'bx:iimp:iimIifArgs)][Any]]
** Execute Command Line:   [[elisp:(bx:iimp:cmndLineExec)][Run Cmnd Line]] | [[elisp:(bx:iimp:cmndLineExec :wrapper "echo")][Echo Cmnd Line]]
**      ============
**  [[elisp:(org-cycle)][| ]]  Py Dev WorkBench ::  Lint, Check And Class Browse The IIM Module  [[elisp:(org-cycle)][| ]]
***  [[elisp:(org-cycle)][| ]]  Class Browsers     ::   [[elisp:(python-check (format "pyclbr %s" bx:iimp:iimName))][pyclbr]]  [[elisp:(org-cycle)][| ]]
***  [[elisp:(org-cycle)][| ]]  Static Checkers    ::   [[elisp:(python-check (format "pyflakes %s" bx:iimp:iimName))][pyflakes]] | [[elisp:(python-check (format "pep8 %s" bx:iimp:iimName)))][pep8]] | [[elisp:(python-check (format "flake8 %s" bx:iimp:iimName)))][flake8]] | [[elisp:(python-check (format "pylint %s" bx:iimp:iimName)))][pylint]] [[elisp:(org-cycle)][| ]]
***  [[elisp:(org-cycle)][| ]]  Execution Checkers ::   [[elisp:(python-check (format "pychecker %s" bx:iimp:iimName)))][pychecker (executes)]]  [[elisp:(org-cycle)][| ]]
***  [[elisp:(org-cycle)][| ]]  CallGraphs         ::   [[elisp:(bx:iimp:cmndLineExec :wrapper "pycallgraph  --max-depth 5 graphviz -- ")][Create ./pycallgraph.png]]  ||  [[elisp:(lsip-local-run-command-here "eog pycallgraph.png")][Visit pycallgraph.png]]  [[elisp:(org-cycle)][| ]]
***  [[elisp:(org-cycle)][| ]]  Sphinx DocStr      ::   [[elisp:(lsip-local-run-command-here "iimsProc.sh -h -v -n showRun -i sphinxDocUpdate")][iimsProc.sh -i sphinxDocUpdate]] || [[elisp:(lsip-local-run-command-here "iimsProc.sh -h -v -n showRun -f -i sphinxDocUpdate")][iimsProc.sh -f -i sphinxDocUpdate]]  [[elisp:(org-cycle)][| ]]
**  [[elisp:(org-cycle)][| ]]  Py Profiling     ::  Execute And Profile the IIM -- Analyze  Profile Results   [[elisp:(org-cycle)][| ]]
***  [[elisp:(org-cycle)][| ]]  Exec & Profile   ::  [[elisp:(bx:iimp:cmndLineExec :wrapper "python -m cProfile -o profile.$$$(date +%s%N)")][Profile Command Line]] [[elisp:(org-cycle)][| ]]
***  [[elisp:(org-cycle)][| ]]  Profile Analysis ::  [[elisp:(lsip-local-run-command-here "ls -l profile.*")][ls -l profile.*]]  [[elisp:(lsip-local-run-command-here "ls -t profile.* | head -1")][latest profile.*]] [[elisp:(org-cycle)][| ]]
***  [[elisp:(org-cycle)][| ]]  Profile CallTree ::  [[elisp:(lsip-local-run-command-here "gprof2dot -f pstats $(ls -t profile.* | head -1) | dot -Tsvg -o Profile.svg")][Create Profile.svg]] || [[elisp:(lsip-local-run-command-here "eog Profile.svg")][Visit Profile.svg]] [[elisp:(org-cycle)][| ]]
***  [[elisp:(org-cycle)][| ]]  python -m pstats ::  [[elisp:(lsip-local-run-command-here "python -m pstats $(ls -t profile.*)")][pstats interactive]]  --  "help"  "sort cumulative"+"stats 5" [[elisp:(org-cycle)][| ]]
***  [[elisp:(org-cycle)][| ]]  Other Prof Tools ::  [[elisp:(lsip-local-run-command-here "cprofilev -f $(ls -t profile.*)")][cprofilev]]  [[elisp:(lsip-local-run-command-here "runsnake $(ls -t profile.*)")][runsnake profile.pid]] [[elisp:(org-cycle)][| ]]
**  [[elisp:(org-cycle)][| ]]  Py Debuggers     ::  Realgud:pdb, realgud:trepan -- Based On CmndLineElems   [[elisp:(org-cycle)][| ]]
***  [[elisp:(org-cycle)][| ]]  realgud:pdb      ::  [[elisp:(bx:iimp:realgud:pdb:noArgs)][Realgud Pdb NoArgs]] ||  [[elisp:(bx:iimp:realgud:pdb:allArgs)][Realgud Pdb All Args]] [[elisp:(org-cycle)][| ]]
**  [[elisp:(org-cycle)][| ]]  Py Sphinx Doc    ::  Generate Documentation With Sphinx   [[elisp:(org-cycle)][| ]]
***  [[elisp:(org-cycle)][| ]]  Doc Update       ::  [[elisp:(lsip-local-run-command-here "iimsProc.sh -h -v -n showRun -i sphinxDocUpdate")][iimsProc.sh -i sphinxDocUpdate]] || [[elisp:(lsip-local-run-command-here "iimsProc.sh -h -v -n showRun -f -i sphinxDocUpdate")][iimsProc.sh -f -i sphinxDocUpdate]]  [[elisp:(org-cycle)][| ]]
*  [[elisp:(org-cycle)][| ]]  Bash IIM Cmnd Ctl  ::   [[elisp:(bx:iimBash:resultsShow:cmndLineElems)][Show Cmnd Line Elems]] |  [[elisp:(bx:iimBash:cmndLineSpecs :verbosity "-v" :callTracking "-n showRun")][Full Verbosity]] | [[elisp:(bx:iimBash:cmndLineSpecs :verbosity "" :callTracking "")][No Verbosity]] [[elisp:(org-cycle)][| ]]
** iimWrapper:         [[elisp:(setq bx:iimBash:iimWrapper "")][""]] | [[elisp:(bx:valueReader:symbol 'bx:iimBash:iimWrapper)][Any]] | [[elisp:(setq bx:iimBash:iimWrapper "echo")][echo]] | [[elisp:(setq bx:iimBash:iimWrapper "time")][time]] 
** iimName:            [[elisp:(setq bx:iimBash:iimName "")][""]] | [[elisp:(bx:valueReader:symbol 'bx:iimBash:iimName)][Any]] | iimName
** iimVerbosity:       [[elisp:(setq bx:iimBash:iimVerbosity "")][""]] | [[elisp:(bx:valueReader:symbol 'bx:iimBash:iimVerbosity)][Any]] | [[elisp:(setq bx:iimBash:iimVerbosity "-v")][-v]]
** iimCallTracking:    [[elisp:(setq bx:iimBash:iimCallTracking "")][""]] | [[elisp:(bx:valueReader:symbol 'bx:iimBash:iimCallTracking)][Any]] | [[elisp:(setq bx:iimBash:iimCallTracking "-n showRun")][-n showRun]]
** iimParamsArgs:      [[elisp:(setq bx:iimBash:iimParamsArgs "")][""]] | [[elisp:(bx:valueReader:symbol 'bx:iimBash:iimParamsArgs)][Any]] | -p parName=parValue
** iimIif:             [[elisp:(setq bx:iimBash:iimIif "")][""]] | [[elisp:(bx:valueReader:symbol 'bx:iimBash:iimIif)][Any]] | [[elisp:(setq bx:iimBash:iimIif "examples")][examples]] | [[elisp:(setq bx:iimBash:iimIif "describe")][describe]]
** iimIifArgs:         [[elisp:(setq bx:iimBash:iimIifArgs "")][""]] | [[elisp:(bx:valueReader:symbol 'bx:iimBash:iimIifArgs)][Any]]
** Execute Command Line:   [[elisp:(bx:iimBash:cmndLineExec)][Run Cmnd Line]] | [[elisp:(bx:iimBash:cmndLineExec :wrapper "echo")][Echo Cmnd Line]]
*  [[elisp:(org-cycle)][| ]]  BxO IIM Args Ctl   ::   [[elisp:(bx:iimBash:resultsShow:cmndLineElems)][Show Cmnd Line Elems]] |  [[elisp:(bx:iimBash:cmndLineSpecs :verbosity "-v" :callTracking "-n showRun")][Full Verbosity]] | [[elisp:(bx:iimBash:cmndLineSpecs :verbosity "" :callTracking "")][No Verbosity]] [[elisp:(org-cycle)][| ]]
** bxo:                [[elisp:(setq bx:iimBash:iimWrapper "")][""]] | [[elisp:(bx:valueReader:symbol 'bx:iimBash:iimWrapper)][Any]] | [[elisp:(setq bx:iimBash:iimWrapper "echo")][echo]] | [[elisp:(setq bx:iimBash:iimWrapper "time")][time]] 
** bxso:               [[elisp:(setq bx:iimBash:iimName "")][""]] | [[elisp:(bx:valueReader:symbol 'bx:iimBash:iimName)][Any]] | iimName
** bxio:               [[elisp:(setq bx:iimBash:iimVerbosity "")][""]] | [[elisp:(bx:valueReader:symbol 'bx:iimBash:iimVerbosity)][Any]] | [[elisp:(setq bx:iimBash:iimVerbosity "-v")][-v]]
** srBase:             [[elisp:(setq bx:iimBash:iimCallTracking "")][""]] | [[elisp:(bx:valueReader:symbol 'bx:iimBash:iimCallTracking)][Any]] | [[elisp:(setq bx:iimBash:iimCallTracking "-n showRun")][-n showRun]]
** Execute Command Line:   [[elisp:(bx:iimBash:cmndLineExec)][Run Cmnd Line]] | [[elisp:(bx:iimBash:cmndLineExec :wrapper "echo")][Echo Cmnd Line]]
*  [[elisp:(org-cycle)][| ]]  BxP Cmnd Line Ctl  ::   [[elisp:(bx:bxpCmnd:resultsShow:cmndLineElems)][Show Cmnd Line Elems]] |   [[elisp:(org-cycle)][| ]]
** cmndWrapper:        [[elisp:(setq bx:iimBash:aFqdn "")][""]] | [[elisp:(bx:valueReader:symbol 'bx:bxpCmnd:aFqdn)][Any]] | NOTYET
** cmndName:           [[elisp:(setq bx:iimBash:aFqdn "")][""]] | [[elisp:(bx:valueReader:symbol 'bx:bxpCmnd:aFqdn)][Any]] | NOTYET
** aFqdn:              [[elisp:(setq bx:iimBash:aFqdn "")][""]] | [[elisp:(bx:valueReader:symbol 'bx:bxpCmnd:aFqdn)][Any]] | [[elisp:(setq bx:bxpCmnd:aFqdn "www.example.com")][www.example.com]] | [[elisp:(setq bx:iimBash:aFqdn "www.by-star.net")][www.by-star.net]]
** aIpAddr:            [[elisp:(setq bx:iimBash:aIpAddr "")][""]] | [[elisp:(bx:valueReader:symbol 'bx:bxpCmnd:aIpAddr)][Any]] | [[elisp:(setq bx:bxpCmnd:aIpAddr "8.8.8.8")][8.8.8.8]]
** Execute Command Line:   [[elisp:(bx:iimBash:cmndLineExec)][Run Cmnd Line]] | [[elisp:(bx:iimBash:cmndLineExec :wrapper "echo")][Echo Cmnd Line]]
*  [[elisp:(org-cycle)][| ]]  ================      /Inside-Dblock-Ends [RO]/   [[elisp:(org-cycle)][| ]]

####+END:
*      /Iim-Dblock-Ends-/   ::
*      ================
*  [[elisp:(beginning-of-buffer)][Top]] ################ [[elisp:(delete-other-windows)][(1)]]            *Overview*
*  [[elisp:(org-cycle)][| ]]  [All]         ::       /Model, Info and Pointers/  [[elisp:(org-cycle)][| ]] 
**  [[elisp:(org-cycle)][| ]]  /Terminology And Model/  [[elisp:(org-cycle)][| ]] 
*** ByStar Regions:  BxDE-BxCollective/Country-BxDistrict-BxSite-BxCluster-BxPlatform-BxUser
*      ================
*  [[elisp:(beginning-of-buffer)][Top]] ######################  [[elisp:(delete-other-windows)][(1)]]
*  [[elisp:(beginning-of-buffer)][Top]] ######################  [[elisp:(delete-other-windows)][(1)]]               /* BISOS BxDE Platform BaseDirs */
*      BISOS Bases Initialization         ::   [[elisp:(find-file "/lcnt/lgpc/bystar/permanent/common/clips/bisosBasesInstall.tex")][bystar/permanent/common/clips/bisosBasesInstall.tex]]
*      Related                            ::   [[elisp:(lsip-local-run-command "bx-bases")][R:bx-bases]] || [[elisp:(find-file "/acct/smb/com/dev-py/LUE/Sync/pypi/pkgs/bisos/bx-bases/dev/bin/bx-bases")][F:bx-bases]]

*  [[elisp:(org-show-subtree)][=|=]]  [[elisp:(beginning-of-buffer)][Top]] | [[elisp:(delete-other-windows)][(1)]] | [[elisp:(org-top-overview)][(O)]] | [[elisp:(progn (org-shifttab) (org-content))][(C)]]   /=====/   [[elisp:(org-cycle)][| *BISOS BASES Structure* | ]]  |
**  [[elisp:(org-show-subtree)][=|=]]  [[elisp:(beginning-of-buffer)][Top]] | [[elisp:(delete-other-windows)][(1)]] | [[elisp:(org-top-overview)][(O)]] | [[elisp:(progn (org-shifttab) (org-content))][(C)]]   /=====/   [[elisp:(org-cycle)][| */bisos* | ]]  |
**  [[elisp:(org-show-subtree)][=|=]]  [[elisp:(beginning-of-buffer)][Top]] | [[elisp:(delete-other-windows)][(1)]] | [[elisp:(org-top-overview)][(O)]] | [[elisp:(progn (org-shifttab) (org-content))][(C)]]   /=====/   [[elisp:(org-cycle)][| */bxo* | ]]  |
    
**  [[elisp:(org-show-subtree)][=|=]]  [[elisp:(beginning-of-buffer)][Top]] | [[elisp:(delete-other-windows)][(1)]] | [[elisp:(org-top-overview)][(O)]] | [[elisp:(progn (org-shifttab) (org-content))][(C)]]   /=====/   [[elisp:(org-cycle)][| */de/run* | ]]  |

**  [[elisp:(org-show-subtree)][=|=]]  [[elisp:(beginning-of-buffer)][Top]] | [[elisp:(delete-other-windows)][(1)]] | [[elisp:(org-top-overview)][(O)]] | [[elisp:(progn (org-shifttab) (org-content))][(C)]]   /=====/   [[elisp:(org-cycle)][| */de/run/bisos* | ]]  |
**  [[elisp:(org-show-subtree)][=|=]]  [[elisp:(beginning-of-buffer)][Top]] | [[elisp:(delete-other-windows)][(1)]] | [[elisp:(org-top-overview)][(O)]] | [[elisp:(progn (org-shifttab) (org-content))][(C)]]   /=====/   [[elisp:(org-cycle)][| */de/run/bxso* | ]]  |
* 
*  [[elisp:(beginning-of-buffer)][Top]] ######################  [[elisp:(delete-other-windows)][(1)]]               /* BLEE BxDE Platform BaseDirs */
*      Locating Base Dir Of PYPI Pkg      ::   [[elisp:(lsip-local-run-command "bx-bases-blee.py")][R:bx-bases-blee.py]] 
*      CONFIG Dir                         ::   [[elisp:(lsip-local-run-command "bx-bases-blee.py -i pkgBase configDir")][bx-bases-blee.py -i pkgBase configDir]]
*      ROOT Dir                           ::   [[elisp:(lsip-local-run-command "bx-bases-blee.py -i pkgBase rootDir")][bx-bases-blee.py -i pkgBase rootDir]]
*  [[elisp:(org-show-subtree)][=|=]]  [[elisp:(beginning-of-buffer)][Top]] | [[elisp:(delete-other-windows)][(1)]] | [[elisp:(org-top-overview)][(O)]] | [[elisp:(progn (org-shifttab) (org-content))][(C)]]   /=====/   [[elisp:(org-cycle)][| *BLEE BASES Structure* | ]]  |
**  [[elisp:(org-show-subtree)][=|=]]  [[elisp:(beginning-of-buffer)][Top]] | [[elisp:(delete-other-windows)][(1)]] | [[elisp:(org-top-overview)][(O)]] | [[elisp:(progn (org-shifttab) (org-content))][(C)]]   /=====/   [[elisp:(org-cycle)][| */bisos/blee* | ]]  |
* 
*  [[elisp:(beginning-of-buffer)][Top]] ######################  [[elisp:(delete-other-windows)][(1)]]               /* BSIF BxDE Platform BaseDirs */
*      Locating Base Dir Of PYPI Pkg      ::   [[elisp:(lsip-local-run-command "bx-bases-blee.py")][R:bx-bases-blee.py]] 
*      CONFIG Dir                         ::   [[elisp:(lsip-local-run-command "bx-bases-blee.py -i pkgBase configDir")][bx-bases-blee.py -i pkgBase configDir]]
*      ROOT Dir                           ::   [[elisp:(lsip-local-run-command "bx-bases-blee.py -i pkgBase rootDir")][bx-bases-blee.py -i pkgBase rootDir]]
*  [[elisp:(org-show-subtree)][=|=]]  [[elisp:(beginning-of-buffer)][Top]] | [[elisp:(delete-other-windows)][(1)]] | [[elisp:(org-top-overview)][(O)]] | [[elisp:(progn (org-shifttab) (org-content))][(C)]]   /=====/   [[elisp:(org-cycle)][| *BSIF (Bx Shell Integration Facilities) BASES Structure* | ]]  |
**  [[elisp:(org-show-subtree)][=|=]]  [[elisp:(beginning-of-buffer)][Top]] | [[elisp:(delete-other-windows)][(1)]] | [[elisp:(org-top-overview)][(O)]] | [[elisp:(progn (org-shifttab) (org-content))][(C)]]   /=====/   [[elisp:(org-cycle)][| */bisos/bsif* | ]]  |
    
* 
*  [[elisp:(beginning-of-buffer)][Top]] ######################  [[elisp:(delete-other-windows)][(1)]]
*  [[elisp:(beginning-of-buffer)][Top]] ################                *BxDE Platform BaseDirs* 
*  [[elisp:(org-cycle)][| ]]  [BxP]         ::       /hss Bases/  */hss/bx3/*  [[elisp:(org-cycle)][| ]] 
*  [[elisp:(org-cycle)][| ]]  [BxP]         ::       /dd Bases -- Disk Drives/  [[elisp:(org-cycle)][| ]] 
*  [[elisp:(org-cycle)][| ]]  [BxP]         ::       /de Bases/  [[elisp:(org-cycle)][| ]] 
*      ================
*  [[elisp:(beginning-of-buffer)][Top]] ################                *Site BaseDirs -- uniform -- Privacy Scopes* 
*  [[elisp:(org-cycle)][| ]]  [PrivScope]   ::       /PrivateScopes -- Descriptions-Overview/  [[elisp:(org-cycle)][| ]] 
**  [[elisp:(org-cycle)][| ]]  Current(+0)/Archive(+1)/Backup(+2)  [[elisp:(org-cycle)][| ]] 
**  [[elisp:(org-cycle)][| ]]  [0-2]    *Public*                :: Fully In Public Domain  [[elisp:(org-cycle)][| ]] 
**  [[elisp:(org-cycle)][| ]]  [3-5]    *Limited*               :: Available But Restricted in someplaces (Restricted Copyright)  [[elisp:(org-cycle)][| ]] 
**  [[elisp:(org-cycle)][| ]]  [6-8]    *ExternalCondfidential* :: Under NDA  [[elisp:(org-cycle)][| ]] 
**  [[elisp:(org-cycle)][| ]]  [9-11]   *ClientConfidential*    :: Client's Private Info  [[elisp:(org-cycle)][| ]] 
**  [[elisp:(org-cycle)][| ]]  [12-14]  *ClusterConfidential*   :: Private but Shareable Within Cluster   [[file:/uniform/ClusterConfidential/]]  [[elisp:(org-cycle)][| ]] 
**  [[elisp:(org-cycle)][| ]]  [15-17]  *PersonalConfidential*  :: User's Private Info        [[file:/uniform/PersonalConfidential/]] + clusterShare [[elisp:(org-cycle)][| ]]
***  [[elisp:(org-cycle)][| ]]  clusterShare      ::  [[file:/uniform/PersonalConfidential/clusterShare]]   [[elisp:(org-cycle)][| ]]
**      ============  
**  [[elisp:(org-cycle)][| ]]  Information Taxonomy Format  ::    [[elisp:(org-cycle)][| ]]
***  [[elisp:(org-cycle)][| ]]  Info Format         ::  Libre-Halaal, Proprietary, Encripted  [[elisp:(org-cycle)][| ]]
***  [[elisp:(org-cycle)][| ]]  Info Availability   ::  [0-2] Globally Public (gpub), [0-2] Globally L-H (gplh),  [3-5] Locally Public (lpub), [6-17] priv  (copyright limitations)  [[elisp:(org-cycle)][| ]]
***  [[elisp:(org-cycle)][| ]]  Store Intent        ::  unpub, repub, priv (intent of this storage)  [[elisp:(org-cycle)][| ]]
**      ============  
**  [[elisp:(org-cycle)][| ]]  Top Labels   ::  Top Labels For Priv Scopes /dd/this/a/0/ /dd/this/a/12/lh   [[elisp:(org-cycle)][| ]]
***      ============ 
***  [[elisp:(org-cycle)][| ]]  0/gplh           ::  [0-2]/gplh  -- Generally Public Libre-Halaal  [[elisp:(org-cycle)][| ]]
***  [[elisp:(org-cycle)][| ]]  0/gpublic        ::  [0-2]/gpub  -- Generally Public [[elisp:(org-cycle)][| ]]
***  [[elisp:(org-cycle)][| ]]  0/gpublic/unpub  ::  [0-2]/{gplh,gpub}/{unpub,repub}  [[elisp:(org-cycle)][| ]]
***  [[elisp:(org-cycle)][| ]]  0/gpublic/repub  ::  [0-2]/{gplh,gpub}/{unpub,repub}  [[elisp:(org-cycle)][| ]]
***  [[elisp:(org-cycle)][| ]]  0/gpublic/repub/contentType  ::  Type Of Content Being Store (e.g. VM, Distro)  [[elisp:(org-cycle)][| ]]
***  [[elisp:(org-cycle)][| ]]  0/gpublic/repub/contentType/formType  ::  Form/Format Of Content Being Store (e.g. subType to contentType)  [[elisp:(org-cycle)][| ]]
***      ============ 
***  [[elisp:(org-cycle)][| ]]  3/lpublic        ::  [3-5]/lpub  -- Locally Public -- Music, Videos, Books [[elisp:(org-cycle)][| ]]
***  [[elisp:(org-cycle)][| ]]  3/leaks       ::  [3-5]/leaks -- Leaks that are desired to be repub [[elisp:(org-cycle)][| ]]
***  [[elisp:(org-cycle)][| ]]  3/dark        ::  [3-5]/dark  -- Available On Dark Internet  [[elisp:(org-cycle)][| ]]
***  [[elisp:(org-cycle)][| ]]  3/propr       ::  [3-5]/propr -- Proprietary  [[elisp:(org-cycle)][| ]]
***  [[elisp:(org-cycle)][| ]]  3/lpublic/unpub  ::  Not meant to be republished  [[elisp:(org-cycle)][| ]]
***  [[elisp:(org-cycle)][| ]]  3/lpublic/repub  ::  Intended to be republished  [[elisp:(org-cycle)][| ]]
***  [[elisp:(org-cycle)][| ]]  3/{lpublic,leaks,dark}/{unpub,repub}/contentType/formType  ::  Form/Format Of Content Being Store (e.g. VM, Distro)  [[elisp:(org-cycle)][| ]]

***      ============ 
***  [[elisp:(org-cycle)][| ]]  6/lh      ::  Libre-Halaal (e.g. /dd/this/a/12/lh) But Chosen To Be Private/Public (A priv Bx VM)  [[elisp:(org-cycle)][| ]]
***  [[elisp:(org-cycle)][| ]]  ./propr   ::  Proprietary-Restricted And Chosen To Be Private -- TurboTax VM  [[elisp:(org-cycle)][| ]]
***  [[elisp:(org-cycle)][| ]]  ./public  ::  Only applies to [0-2] -- Public On Internet and internationally  [[elisp:(org-cycle)][| ]]
***      ./lh vs ./pub ::  ./lh is perpetual vs. ./pub just for now.
***  [[elisp:(org-cycle)][| ]]  ./gplh-unpub  ::  in [0-2] -- is publishable but chosen not to publish  [[elisp:(org-cycle)][| ]]
***  [[elisp:(org-cycle)][| ]]  ./gpub-unpub ::  in [0-2] -- is publishable but chosen not to publish  [[elisp:(org-cycle)][| ]]
***  [[elisp:(org-cycle)][| ]]  ./lh-repub  ::  in [0-2] -- is publishable and chosen to publish  [[elisp:(org-cycle)][| ]]
***  [[elisp:(org-cycle)][| ]]  ./pub-repub ::  in [0-2] -- is publishable and chosen to publish  [[elisp:(org-cycle)][| ]]
***  [[elisp:(org-cycle)][| ]]  ./lh-priv   ::  lh in format -- is not publishable and is private  [[elisp:(org-cycle)][| ]]
**      ============  
**  [[elisp:(org-cycle)][| ]]  Content Types and Subs   ::  vm, distro, sw, sw/src, sw/bin, audio, audio/music, audio/book, video, video/dvd, video/download, book, comic, std, doc,    [[elisp:(org-cycle)][| ]]
***      ============ 
***  [[elisp:(org-cycle)][| ]]  mkdir types   ::    [[elisp:(lsip-local-run-command "mkdir -p vm distro sw audio video book comic doc std")][mkdir -p vm distro sw audio video book comic doc std]]   [[elisp:(org-cycle)][| ]]
***  [[elisp:(org-cycle)][| ]]  vm        ::  Virtual Machines of KVM, ovf, vmware, virtualbox  [[elisp:(org-cycle)][| ]]
***  [[elisp:(org-cycle)][| ]]  distro    ::  Operating System Images (ubuntu, debian, ...)  [[elisp:(org-cycle)][| ]]
***  [[elisp:(org-cycle)][| ]]  sw        ::  Software in source and binary form  [[elisp:(org-cycle)][| ]]
***  [[elisp:(org-cycle)][| ]]  audio     ::  Audios  [[elisp:(org-cycle)][| ]]
***  [[elisp:(org-cycle)][| ]]  video     ::  Videos  [[elisp:(org-cycle)][| ]]
***  [[elisp:(org-cycle)][| ]]  book      ::  Books, PDFs, ebooks,  [[elisp:(org-cycle)][| ]]
***  [[elisp:(org-cycle)][| ]]  comic     ::  comics  [[elisp:(org-cycle)][| ]]
***  [[elisp:(org-cycle)][| ]]  doc       ::  documents [[elisp:(org-cycle)][| ]]
***  [[elisp:(org-cycle)][| ]]  std       ::  standards [[elisp:(org-cycle)][| ]]
**      ============   
*  [[elisp:(org-cycle)][| ]]  [PrivScope]   ::       /PrivateScopes -- ddPrivacyContexts Prepartions/  [[elisp:(org-cycle)][| ]] 
**  [[elisp:(org-cycle)][| ]]  Bases Prep   ::    [[elisp:(lsip-local-run-command "echo bystarPlatformBaseDirs.sh -h -v -n showRun -p baseDir=/dd/this/md0 -i ddPrivScopeBasesPrep")][echo bystarPlatformBaseDirs.sh -p baseDir=/dd/this/md0 -i ddPrivScopeBasesPrep]]   [[elisp:(org-cycle)][| ]]
**     [All]         ::   commonPlatformBaseDirs.libSh              [[file:/opt/public/osmt/bin/commonPlatformBaseDirs.libSh::Xref-Here-][Visit]]
sitePlatformBaseDirs.sh -i pbdListShow pbdList_ddPrivScopeBases
*  [[elisp:(org-cycle)][| ]]  [PrivScope]   ::       /PrivateScopes -- Site -- NFS Mounts -- NFS UnMounts/  [[elisp:(org-cycle)][| ]] 
**  [[elisp:(org-cycle)][| ]]  df               ::    [[elisp:(lsip-local-run-command "df")][df]]   [[elisp:(org-cycle)][| ]]
**  [[elisp:(org-cycle)][| ]]  NFS Mount        ::    [[elisp:(lsip-local-run-command "sitePlatformBaseDirs.sh -h -v -n showRun -i siteNfsMounts")][sitePlatformBaseDirs.sh -h -v -n showRun -i siteNfsMounts]]   [[elisp:(org-cycle)][| ]]
**  [[elisp:(org-cycle)][| ]]  NFS UnMount      ::    [[elisp:(lsip-local-run-command "sitePlatformBaseDirs.sh -h -v -n showRun -i siteNfsUnMounts")][sitePlatformBaseDirs.sh -h -v -n showRun -i siteNfsUnMounts]]   [[elisp:(org-cycle)][| ]]
sitePlatformBaseDirs.sh -h -v -n showRun -i siteNfsFstabLines
*  [[elisp:(org-cycle)][| ]]  [uniform]     ::       /uniform Bases -- Site -- UniformLinksUpdate/  [[elisp:(org-cycle)][| ]] 
**  [[elisp:(org-cycle)][| ]]  Uniform Links    ::    [[elisp:(lsip-local-run-command "sitePlatformBaseDirs.sh")][sitePlatformBaseDirs.sh]]   [[elisp:(org-cycle)][| ]]
**  [[elisp:(org-cycle)][| ]]  Uniform Links    ::    [[elisp:(lsip-local-run-command "sitePlatformBaseDirs.sh -h -v -n showRun -i siteUniformLinksUpdate")][sitePlatformBaseDirs.sh -h -v -n showRun -i siteUniformLinksUpdate]]   [[elisp:(org-cycle)][| ]]
*  [[elisp:(org-cycle)][| ]]  [Site Status] ::       /Site Status -- uniform Bases -- Site/  [[elisp:(org-cycle)][| ]] 
**  [[elisp:(org-cycle)][| ]]  /uniform         ::     [[elisp:(lsip-local-run-command "cd /uniform; ls -C -F -1 | emlStdinGen -i lsToManifestStdout")][cd /uniform; ls -C -F -1 | emlStdinGen -i lsToManifestStdout]]   [[elisp:(org-cycle)][| ]]
**      ====[[elisp:(org-cycle)][Fold]]==== ArchiveClientConfidential@
**  [[elisp:(org-cycle)][| ]]  /uniform         ::     [[elisp:(lsip-local-run-command "cd /uniform/ArchiveClientConfidential; ls -C -F -1 | emlStdinGen -i lsToManifestStdout")][cd /uniform/ArchiveClientConfidential; ls -C -F -1 | emlStdinGen -i lsToManifestStdout]]   [[elisp:(org-cycle)][| ]]
**      ====[[elisp:(org-cycle)][Fold]]==== ArchiveClusterConfidential@
**      ====[[elisp:(org-cycle)][Fold]]==== ArchiveConfidential@
**      ====[[elisp:(org-cycle)][Fold]]==== ArchiveExternalConfidential@
**      ====[[elisp:(org-cycle)][Fold]]==== ArchiveLimited@
**      ====[[elisp:(org-cycle)][Fold]]==== ArchivePersonalConfidential@
**      ====[[elisp:(org-cycle)][Fold]]==== ArchivePublic@
**      ====[[elisp:(org-cycle)][Fold]]==== backup@
**      ====[[elisp:(org-cycle)][Fold]]==== BackupClientConfidential@
**      ====[[elisp:(org-cycle)][Fold]]==== BackupClusterConfidential@
**      ====[[elisp:(org-cycle)][Fold]]==== BackupConfidential@
**      ====[[elisp:(org-cycle)][Fold]]==== BackupExternalConfidential@
**      ====[[elisp:(org-cycle)][Fold]]==== BackupLimited@
**      ====[[elisp:(org-cycle)][Fold]]==== BackupPersonalConfidential@
**      ====[[elisp:(org-cycle)][Fold]]==== BackupPublic@
**      ====[[elisp:(org-cycle)][Fold]]==== ClientConfidential@
**      ====[[elisp:(org-cycle)][Fold]]==== ClusterConfidential@
**      ====[[elisp:(org-cycle)][Fold]]==== distros/
**      ====[[elisp:(org-cycle)][Fold]]==== Distros/
**      ====[[elisp:(org-cycle)][Fold]]==== ExternalConfidential@
**      ====[[elisp:(org-cycle)][Fold]]==== ExternalLimited@
**      ====[[elisp:(org-cycle)][Fold]]==== Limited@
**      ====[[elisp:(org-cycle)][Fold]]==== Music@
**      ====[[elisp:(org-cycle)][Fold]]==== PersonalConfidential@
**      ====[[elisp:(org-cycle)][Fold]]==== Public@
**      ====[[elisp:(org-cycle)][Fold]]==== VMs/
*      ================
*  [[elisp:(beginning-of-buffer)][Top]] ################                *BxO BaseDirs* 
*      ================
*  [[elisp:(beginning-of-buffer)][Top]] ################                *BxU BaseDirs* 
*  [[elisp:(org-cycle)][| ]]  [BxU]         ::       /BxU BaseDirs/  [[elisp:(org-cycle)][| ]] 
*      ================
*  [[elisp:(beginning-of-buffer)][Top]] ################                *Manual Character Based NFS Export/Import* 
*  [[elisp:(org-cycle)][| ]]  NFS export    ::     /opt/public/osmt/bin/charNfsDaemonAdmin.sh  [[elisp:(org-cycle)][| ]] 
**      ============   
*  [[elisp:(org-cycle)][| ]]  NFS Import    ::     For now it is from the site panel [[elisp:(org-cycle)][| ]] 
*  [[elisp:(org-cycle)][| ]]  NFS Import    ::     Build On /opt/public/osmt/bin/lcaNfsClientManage.sh [[elisp:(org-cycle)][| ]] 
*      ================

####+BEGIN: blee:bxPanel:evolution
* [[elisp:(show-all)][(>]] [[elisp:(describe-function 'org-dblock-write:blee:bxPanel:evolution)][dbf]]
*                                   _━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━_
* [[elisp:(show-all)][|n]]  _[[elisp:(blee:menu-sel:outline:popupMenu)][±]]_  _[[elisp:(blee:menu-sel:navigation:popupMenu)][Ξ]]_     [[elisp:(org-cycle)][| *Maintenance:* | ]]  [[elisp:(blee:menu-sel:agenda:popupMenu)][||Agenda]]  <<Evolution>>  [[elisp:(org-shifttab)][<)]] E|
####+END
####+BEGIN: blee:bxPanel:foldingSection :outLevel 2 :title "Notes, Ideas, Tasks, Agenda" :anchor "Tasks"
** [[elisp:(show-all)][(>]]  _[[elisp:(blee:menu-sel:outline:popupMenu)][±]]_  _[[elisp:(blee:menu-sel:navigation:popupMenu)][Ξ]]_       [[elisp:(org-cycle)][| /Notes, Ideas, Tasks, Agenda:/ |]] <<Tasks>>   [[elisp:(org-shifttab)][<)]] E|
####+END
*** TODO Some Idea
####+BEGIN: blee:bxPanel:evolutionMaintainers
** [[elisp:(show-all)][(>]] [[elisp:(describe-function 'org-dblock-write:blee:bxPanel:evolutionMaintainers)][dbf]]
** [[elisp:(show-all)][|n]]  _[[elisp:(blee:menu-sel:outline:popupMenu)][±]]_  _[[elisp:(blee:menu-sel:navigation:popupMenu)][Ξ]]_       [[elisp:(org-cycle)][| /Bug Reports, Development Team:/ | ]]  <<Maintainers>>  
***  Problem Report                       ::   [[elisp:(find-file "")][Send debbug Email]]
***  Maintainers                          ::   [[bbdb:Mohsen.*Banan]]  :: http://mohsen.1.banan.byname.net  E|
####+END
* B|
####+BEGIN: blee:bxPanel:footerPanelControls
* [[elisp:(show-all)][(>]] ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 
* /Footer Controls/ ::  [[elisp:(blee:bnsm:menu-back)][Back]]  [[elisp:(toggle-read-only)][toggle-read-only]]  [[elisp:(show-all)][Show-All]]  [[elisp:(org-shifttab)][Cycle Glob Vis]]  [[elisp:(delete-other-windows)][1 Win]]  [[elisp:(save-buffer)][Save]]   [[elisp:(kill-buffer)][Quit]]  [[elisp:(org-shifttab)][<)]] E|
####+END
####+BEGIN: blee:bxPanel:footerOrgParams
* [[elisp:(show-all)][(>]] [[elisp:(describe-function 'org-dblock-write:blee:bxPanel:footerOrgParams)][dbf]]
* [[elisp:(show-all)][|n]]  _[[elisp:(blee:menu-sel:outline:popupMenu)][±]]_  _[[elisp:(blee:menu-sel:navigation:popupMenu)][Ξ]]_     [[elisp:(org-cycle)][| *= Org-Mode Local Params: =* | ]]
#+STARTUP: overview
#+STARTUP: lognotestate
#+STARTUP: inlineimages
#+SEQ_TODO: TODO WAITING DELEGATED | DONE DEFERRED CANCELLED
#+TAGS: @desk(d) @home(h) @work(w) @withInternet(i) @road(r) call(c) errand(e)
#+CATEGORY: L:uniformBaseDirs
####+END
####+BEGIN: blee:bxPanel:footerEmacsParams :primMode "org-mode"
* [[elisp:(show-all)][(>]] [[elisp:(describe-function 'org-dblock-write:blee:bxPanel:footerEmacsParams)][dbf]]
* [[elisp:(show-all)][|n]]  _[[elisp:(blee:menu-sel:outline:popupMenu)][±]]_  _[[elisp:(blee:menu-sel:navigation:popupMenu)][Ξ]]_     [[elisp:(org-cycle)][| *= Emacs Local Params: =* | ]]
# Local Variables:
# eval: (setq-local ~selectedSubject "noSubject")
# eval: (setq-local ~primaryMajorMode 'org-mode)
# eval: (setq-local ~blee:panelUpdater nil)
# eval: (setq-local ~blee:dblockEnabler nil)
# eval: (setq-local ~blee:dblockController "interactive")
# eval: (img-link-overlays)
# eval: (set-fill-column 115)
# eval: (blee:fill-column-indicator/enable)
# eval: (bx:load-file:ifOneExists "./panelActions.el")
# End:

####+END
